{"version":3,"sources":["config/index.js","screens/login/reducers/signin.js","screens/login/reducers/signup.js","screens/chat/reducers/findUser.js","screens/chat/reducers/chat.js","reducers/index.js","store.js","screens/login/actions/signin.js","api/userAPI.js","screens/login/actions/signup.js","screens/login/Register.js","screens/login/Login.js","screens/chat/actions/findUser.js","components/pieceMessage.js","utils/common.js","api/chatAPI.js","screens/chat/actions/chat.js","screens/chat/ListUser.js","components/showListFriend.js","screens/chat/Chat.js","actions/index.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api_url","url","initialState","isSignin","signinSuccessful","error","isSignup","signupSuccessful","isFindUser","findUserSuccessful","data","receiverID","listFriend","listMessage","callingAPI","titleName","appReducer","combineReducers","signinReducer","state","arguments","length","undefined","action","type","Object","objectSpread","err","signupReducer","findUserReducer","result","chatReducer","concat","toConsumableArray","arr","rootReducer","logger","createLogger","timestamps","duration","store","createStore","compose","applyMiddleware","thunk","login","username","password","dispatch","Promise","resolve","reject","user","axios","post","config","then","res","status","message","localStorage","setItem","id","accessToken","refreshToken","catch","loginAPI","signin_fail","createUser","full_name","phone","genre","errmsg","createUserAPI","signup_fail","Register","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","target","value","onClickSignUp","bind","assertThisInitialized","_this$state","_this2","classes","alert","signup_fail_handle","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","TextField_default","required","name","label","fullWidth","autoComplete","onChange","e","FormLabel_default","component","sm","FormControlLabel_default","control","Radio_default","checked","aria-label","Button_default","color","className","submit","disabled","onClick","React","Component","connect","withStyles","theme","marginTop","unit","Login","onClickSignin","getItem","history","push","signin_fail_handle","main","role","Paper_default","paper","login_Register","CssBaseline_default","Avatar_default","avatar","BugReport_default","form","FormControl_default","margin","InputLabel_default","htmlFor","Input_default","autoFocus","Checkbox_default","defineProperty","width","display","marginLeft","marginRight","breakpoints","up","flexDirection","alignItems","padding","backgroundColor","palette","secondary","textAlign","findUser","get","params","keyword","findUserAPI","findUser_successful","findUser_fail","card","title","fontSize","maxWidth","div","sender","justifyContent","seen","senderStyle","isSeen","style","listStyleType","Card_default","CardContent_default","content","getHeaders","Content-Type","Accept","x-access-token","getListFriend","userID","headers","getListFriendAPI","get_list_friend_successful","friendID","_id","getListMessage","select_user_to_chat","set_title_name","fail","senderID","getListMessageAPI","get_list_message_successful","styles","blue","ListUser","handleClose","onClose","selectedValue","handleListItemClick","receiveID","_this$props","other","objectWithoutProperties","Dialog_default","assign","aria-labelledby","DialogTitle_default","List_default","map","ListItem_default","button","key","ListItemAvatar_default","Person_default","ListItemText_default","primary","onlineBar","ShowListFriend","socketID","Chat","handleClickSearch","open","searchText","onClickLogOut","log_out","clear","onFocusMessage","lastMessage","socket","emit","handleClickSend","input","date","Date","now","find","u","on","getNewFriend","push_message","x","document","getElementById","scrollTop","scrollHeight","componentWillMount","token","io","query","handleKeyPressSearch","handleKeyPressMessage","lastScrollHeight","setInterval","divTop","borderRight","index_es","IconButton_default","AccountCircle_default","divBottom","searchDiv","InputBase_default","placeholder","root","inputSearchRoot","inputSearch","onKeyPress","Divider_default","divider","iconButton","Search_default","chat_ListUser","cardListFriend","showListFriend","cardMessage","overflow","msg","pieceMessage","messageBar","elevation","onFocus","Send_default","findUser_fail_handle","height","borderBottom","background","borderRadius","flex","paddingLeft","Root","react_router_dom","react_router","exact","path","App","es","router","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69609197.chunk.js","sourcesContent":["const config = {\n    api_url: \"https://chat-realtime-by-keyti.herokuapp.com/api\",\n    url:\"https://chat-realtime-by-keyti.herokuapp.com/chat\"\n}\n\nmodule.exports = config","const initialState = {\n    isSignin: false,\n    signinSuccessful: false,\n    error: null\n}\n\nexport const signinReducer = ( state = initialState, action) => {\n    switch(action.type){\n    case 'SIGNIN_START':\n        return {\n            ...state,\n            isSignin: true\n        }\n    case 'SIGNIN_SUCCESSFUL':\n        return {\n        ...state,\n        isSignin: false,\n        signinSuccessful: true\n    }\n    case 'SIGNIN_FAIL':\n        return {\n        ...state,\n        isSignin: false,\n        error: action.err\n    }\n    case 'SIGNIN_FAIL_HANDLE':\n    return {\n    ...state,\n    error: null\n}\n    default:\n        return state\n    }\n}","const initialState = {\n    isSignup: false,\n    signupSuccessful: false,\n    error: null\n}\n\nexport const signupReducer = ( state = initialState, action) => {\n    switch(action.type){\n    case 'SIGNUP_START':\n        return {\n            ...state,\n            isSignup: true\n        }\n    case 'SIGNUP_SUCCESSFUL':\n        return {\n        ...state,\n        isSignup: false,\n        signupSuccessful: true\n    }\n    case 'SIGNUP_FAIL':\n        return {\n        ...state,\n        isSignup: false,\n        error: action.err\n    }\n    case 'SIGNUP_FAIL_HANDLE':\n    return {\n    ...state,\n    error: null\n}\n    default:\n        return state\n    }\n}","const initialState = {\n    isFindUser: false,\n    findUserSuccessful: false,\n    data: [],\n    error: null\n}\n\nexport const findUserReducer = ( state = initialState, action) => {\n    switch(action.type){\n    case 'FINDUSER_START':\n        return {\n            ...state,\n            isFindUser: true\n        }\n    case 'FINDUSER_SUCCESSFUL':\n        return {\n        ...state,\n        isFindUser: false,\n        findUserSuccessful: true,\n        data: action.result,\n    }\n    case 'FINDUSER_FAIL':\n        return {\n        ...state,\n        isFindUser: false,\n        error: action.err\n    }\n    case 'FINDUSER_FAIL_HANDLE':\n    return {\n    ...state,\n    error: null\n}\n    default:\n        return state\n    }\n}","const initialState = {\n    receiverID: '',\n    listFriend: [],\n    listMessage: [],\n    error: null,\n    callingAPI: false,\n    titleName: '',\n}\n\nexport const chatReducer = ( state = initialState, action) => {\n    switch(action.type){\n    case 'SET_TITLE_NAME':\n        return {\n            ...state,\n            titleName: action.titleName\n        }\n    case 'SET_RECEIVER_ID':\n        return {\n            ...state,\n            receiverID: action.receiverID\n        }\n    case 'SET_LIST_FRIEND':\n        return {\n        ...state,\n        listFriend: action.listFriend,\n        callingAPI: false\n    }\n    case 'SET_LIST_MESSAGE':\n    return {\n        ...state,\n        listMessage: action.listMessage,\n        callingAPI: false\n    }\n    case 'PUSH_MESSAGE':\n    return {\n        ...state,\n        listMessage: [...state.listMessage, action.arr],\n        callingAPI: false\n    }\n    case 'CALLING_API':\n    return {\n        ...state,\n        callingAPI: true\n    }\n    case 'FAIL':\n    return {\n        ...state,\n        error: action.err,\n        callingAPI: false\n    }\n    case 'FAIL_HANDLE':\n    return {\n        ...state,\n        error: null\n    }\n    default:\n        return state\n    }\n}","import { combineReducers } from \"redux\";\nimport {signinReducer} from \"../screens/login/reducers/signin\"\nimport {signupReducer} from \"../screens/login/reducers/signup\"\nimport {findUserReducer} from \"../screens/chat/reducers/findUser\"\nimport {chatReducer} from \"../screens/chat/reducers/chat\"\n\nconst appReducer = combineReducers({\n    signinReducer,\n    signupReducer,\n    findUserReducer,\n    chatReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'LOG_OUT') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;","import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\"\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nlet logger = createLogger({\n    timestamps: true,\n    duration: true\n});\nconst store = createStore(rootReducer, compose(applyMiddleware(logger, thunk)));\n\nexport default store;","import { login as loginAPI } from '../../../api/userAPI'\n\nexport function login(username, password){\n    return (dispatch) => {\n        dispatch(signin_start())\n\n        loginAPI(username, password)\n        .then(() => {\n            dispatch(signin_successful())\n        })\n        .catch((err) => {\n            dispatch(signin_fail(err))\n        });\n    }\n}\n\n\nexport function signin_start(){\n    return {\n        type: 'SIGNIN_START'\n    }\n}\n\nexport function signin_successful(){\n    return {\n        type: 'SIGNIN_SUCCESSFUL'\n    }\n}\n\nexport function signin_fail(err){\n    return {\n        type: 'SIGNIN_FAIL',\n        err: err\n    }\n}\n\nexport function signin_fail_handle(){\n    return {\n        type: 'SIGNIN_FAIL_HANDLE'\n    }\n}\n\n","import axios from 'axios';\nimport config from '../config';\n\nexport function login(username, password){\n    return new Promise((resolve, reject)=>{\n        const user = {\n            username: username,\n            password: password\n        }\n        return axios.post(config.api_url+ '/users/login', user)\n          .then(res => {\n            if (res.data.status === 0) {\n                return reject(res.data.error.message)\n            }\n            localStorage.setItem('userID', res.data.result.id);\n            localStorage.setItem('accessToken', res.data.result.accessToken);\n            localStorage.setItem('refreshToken', res.data.result.refreshToken);\n            resolve();\n          })\n          .catch(err => {\n            reject(err);\n          });\n    })\n}\n\nexport function createUser(username, password, full_name, phone, genre){\n  return new Promise((resolve, reject) => {\n    const register = {\n      username: username,\n      password: password,\n      full_name: full_name,\n      phone: phone,\n      genre: genre\n    }\n    const user = {\n      user: register\n    }\n    return axios.post(config.api_url+ '/users/create', user)\n    .then(res => {\n      if (res.data.status === 1) {\n          return resolve();\n      }\n      if(res.data.error.message.errmsg)\n        reject(\"email or phone number has been registed\")\n      reject(res.data.error.message)\n    })\n    .catch(err => {\n      reject(err);\n    });\n  })\n}\n\nexport function findUser(username){\n  return new Promise((resolve, reject) => {\n    return axios.get(config.api_url+ '/users/find', {\n      params: {\n        keyword: username\n      }\n    })\n    .then( res => {\n      if (res.data.status === 0)\n        return reject(res.data.error.message)\n      resolve(res.data.result)\n    })\n    .catch(err => reject(err))\n  })\n}","import { createUser as createUserAPI } from '../../../api/userAPI'\n\nexport function createUser(username, password, full_name, phone, genre){\n    return (dispatch) => {\n        dispatch(signup_start())\n\n        createUserAPI(username, password, full_name, phone, genre)\n        .then(() => {\n            dispatch(signup_successful())\n        })\n        .catch((err) => {\n            dispatch(signup_fail(err))\n        });\n    }\n}\n\nexport function signup_start(){\n    return {\n        type: 'SIGNUP_START'\n    }\n}\n\nexport function signup_successful(){\n    return {\n        type: 'SIGNUP_SUCCESSFUL'\n    }\n}\n\nexport function signup_fail(err){\n    return {\n        type: 'SIGNUP_FAIL',\n        err: err\n    }\n}\n\nexport function signup_fail_handle(){\n    return {\n        type: 'SIGNUP_FAIL_HANDLE'\n    }\n}\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport PropTypes from 'prop-types';\nimport { createUser, signup_fail, signup_fail_handle} from './actions/signup'\nimport {connect} from 'react-redux';\n\nconst styles = theme => ({\n    submit: {\n      marginTop: theme.spacing.unit * 3,\n    }\n});\n\nclass Register extends React.Component{\n    state = {\n        full_name: \"\",\n        username: \"\",\n        password: \"\",\n        phone: \"\",\n        genre: \"\"\n    }\n\n    constructor(props){\n        super(props)\n    \n        this.onClickSignUp = this.onClickSignUp.bind(this)\n    }\n\n    handleChange = event => {\n        this.setState({genre: event.target.value})\n    }\n\n    onClickSignUp() {\n        let {full_name, username, password, phone, genre} = this.state;\n        this.props.createUser(username, password, full_name, phone, genre)\n    }\n    render(){\n        const { classes } = this.props;\n        if(this.props.signupReducer.error){\n            alert(\"sign up fail: \" + this.props.signupReducer.error)\n            this.props.signup_fail_handle();\n        }\n        if(this.props.signupReducer.signupSuccessful)\n            alert(\"register true\")\n        return (\n            <React.Fragment>\n              <Typography variant=\"h6\" gutterBottom>\n                Register Form\n              </Typography>\n              <form>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"full_name\"\n                        name=\"full_name\"\n                        label=\"Full name\"\n                        fullWidth\n                        autoComplete=\"billing full name\"\n                        onChange={e=>this.setState({full_name: e.target.value})} \n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"email\"\n                        name=\"email\"\n                        label=\"Email\"\n                        fullWidth\n                        autoComplete=\"billing email\"\n                        onChange={e=>this.setState({username: e.target.value})} \n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label=\"Password\"\n                        fullWidth\n                        autoComplete=\"billing password\"\n                        onChange={e=>this.setState({password: e.target.value})} \n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"phone\"\n                        name=\"phone\"\n                        label=\"Phone\"\n                        fullWidth\n                        autoComplete=\"billing phone\"\n                        onChange={e=>this.setState({phone: e.target.value})} \n                    />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormLabel required component=\"legend\">Genre</FormLabel>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <FormControlLabel\n                        control ={\n                            <Radio\n                                checked={this.state.genre === '1'}\n                                onChange={this.handleChange}\n                                value=\"1\"\n                                name=\"radio-button-demo\"\n                                aria-label=\"B\"\n                            />\n                        }\n                        label=\"Male\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <FormControlLabel\n                        control ={\n                            <Radio\n                                checked={this.state.genre === '2'}\n                                onChange={this.handleChange}\n                                value=\"2\"\n                                name=\"radio-button-demo\"\n                                aria-label=\"B\"\n                            />\n                        }\n                        label=\"Female\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <FormControlLabel\n                        control ={\n                            <Radio\n                                checked={this.state.genre === '3'}\n                                onChange={this.handleChange}\n                                value=\"3\"\n                                name=\"radio-button-demo\"\n                                aria-label=\"B\"\n                            />\n                        }\n                        label=\"Other\"\n                        />\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={this.props.signupReducer.isSignup && !this.props.signupReducer.signupSuccessful}\n                        onClick={this.onClickSignUp}\n                        >\n                        Sign Up\n                    </Button>\n                </Grid>\n              </form>\n            </React.Fragment>\n        );\n    }\n}\n\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = (state) => ({\n    signupReducer: state.signupReducer\n})\n\nconst mapDispatchToProps = (dispatch) =>({\n    createUser: (username, password, full_name, phone, genre) => dispatch(createUser(username, password, full_name, phone, genre)),\n    signup_fail: () => dispatch(signup_fail()),\n    signup_fail_handle: () => dispatch(signup_fail_handle())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(Register));","import React from 'react';\nimport {connect} from 'react-redux';\nimport { login, signin_fail_handle} from '../../screens/login/actions/signin'\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport BugReport from '@material-ui/icons/BugReport';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Register from './Register';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 900,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  type: {\n    marginTop: theme.spacing.unit * 3,\n    color: 'rgba(0, 0, 0, 0.54)',\n    textAlign: 'center',\n  },\n});\n\nclass Login extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  constructor(props){\n    super(props)\n\n    this.onClickSignin = this.onClickSignin.bind(this)\n}\n\ncomponentWillMount(){\n    if(localStorage.getItem('accessToken')){\n      this.props.history.push('/app')\n      // window.location.reload()\n    }\n}\n\n  onClickSignin(){\n    let {username, password} = this.state\n\n    this.props.login(username, password)\n  }\n\n  render(){ \n    const { classes } = this.props;\n    if(this.props.signinReducer.error){\n      alert(\"sign fail: \" + this.props.signinReducer.error)\n      this.props.signin_fail_handle();\n    }\n    if(this.props.signinReducer.signinSuccessful)\n      this.props.history.push('/app')\n      \n    return (\n      <main className={classes.main}>\n          <React.Fragment>\n            <Typography className={classes.type} component=\"h4\" variant=\"h6\">\n              <span role=\"img\" aria-label=\"Love\"> ❤️ </span>\n              Chat Realtime\n              <span role=\"img\" aria-label=\"Love\"> ❤️ </span>\n            </Typography>\n            <Grid container spacing={40}>\n              <Grid item xs={12} sm={6}>\n                <Paper className={classes.paper}>\n                  <Register />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <React.Fragment>\n                  <CssBaseline />\n                  <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                      <BugReport />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                      Sign in\n                    </Typography>\n                    <form className={classes.form}>\n                      <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                        <Input \n                        id=\"email\" \n                        name=\"email\" \n                        autoComplete=\"email\" \n                        autoFocus\n                        onChange={e=>this.setState({username: e.target.value})}\n                        />\n                      </FormControl>\n                      <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <Input \n                        name=\"password\" \n                        type=\"password\" \n                        id=\"password\" \n                        autoComplete=\"current-password\"\n                        onChange={e=>this.setState({password: e.target.value})} \n                        />\n                      </FormControl>\n                      <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                      />\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={this.props.signinReducer.isSignin && !this.props.signinReducer.signinSuccessful}\n                        onClick={this.onClickSignin}\n                      >\n                        Sign in\n                      </Button>\n                    </form>\n                  </Paper>\n                  <Typography className={classes.type} component=\"h4\" variant=\"h6\">\n                    Develop with \n                    <span role=\"img\" aria-label=\"Love\"> ❤️ </span>\n                    by Keyti\n                  </Typography>\n                </React.Fragment>\n              </Grid>\n            </Grid>\n            </React.Fragment>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  signinReducer: state.signinReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (username, password)=>dispatch(login(username, password)),\n  signin_fail_handle: ()=>dispatch(signin_fail_handle()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(Login));","import { findUser as findUserAPI } from '../../../api/userAPI'\n\nexport function findUser(username){\n    return (dispatch) => {\n        dispatch(findUser_start())\n\n        findUserAPI(username)\n        .then( result => {\n            dispatch(findUser_successful(result))\n        })\n        .catch((err) => {\n            dispatch(findUser_fail(err))\n        });\n    }\n}\n\nexport function findUser_start(){\n    return {\n        type: 'FINDUSER_START'\n    }\n}\n\nexport function findUser_successful(result){\n    return {\n        type: 'FINDUSER_SUCCESSFUL',\n        result: result\n    }\n}\n\nexport function findUser_fail(err){\n    return {\n        type: 'FINDUSER_FAIL',\n        err: err\n    }\n}\n\nexport function findUser_fail_handle(){\n    return {\n        type: 'FINDUSER_FAIL_HANDLE'\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  card: {\n    margin: '10px'\n  },\n  title: {\n    fontSize: 14,\n    maxWidth: '50vw'\n\n  },\n  div: {\n      display: 'table',\n  },\n  sender: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  seen: {\n    color: '#bdbdbd',\n  }\n};\n\nfunction PieceMessage(props) {\n    const { classes } = props;\n    var senderStyle;\n    var isSeen;\n    if(props.sender === true)\n        senderStyle = classes.sender;\n    if(props.seen === true)\n        isSeen = \"seen\";\n  return (\n      <li className={senderStyle} style={{listStyleType: 'none'}} >\n        <div className={classes.div}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.content}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <div className={classes.seen}>\n              {isSeen}\n            </div>\n        </div>\n      </li>\n  );\n}\n\nPieceMessage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PieceMessage);","export function getHeaders() {\n    var token = localStorage.getItem('accessToken')\n    \n    var headers = {\n        'Content-Type': 'application/json; charset=utf-8',\n        'Accept': 'application/json',\n        'x-access-token': token\n    }\n    return headers;\n}","import axios from 'axios';\nimport config from '../config';\nimport  {getHeaders} from '../utils/common'\n\nexport function getListMessage(receiverID){\n    return new Promise((resolve, reject)=>{\n        var data = {\n            senderID: localStorage.getItem('userID'),\n            receiverID: receiverID\n        }\n        return axios.post(config.api_url+ '/chats/getListMessage', data, {headers: getHeaders()})\n          .then(res => {\n            if (res.data.status === 0) {\n                return reject(res.data.error.message)\n            }\n            resolve(res.data.result);\n          })\n          .catch(err => {reject(err)});\n    })\n}\n\nexport function getListFriend() {\n    return new Promise((resolve, reject)=>{\n        var data = {\n            userID: localStorage.getItem('userID'),\n        }\n        return axios.post(config.api_url+ '/chats/getListFriend', data, {headers: getHeaders()})\n          .then(res => {\n            if (res.data.status === 0) {\n                return reject(res.data.error)\n            }\n            resolve(res.data.result);\n          })\n          .catch(err => {reject(err)});\n    })\n}\n","import { getListFriend as getListFriendAPI } from '../../../api/chatAPI'\nimport { getListMessage as getListMessageAPI } from '../../../api/chatAPI'\n\nexport function getListFriend(){\n    return (dispatch) => {\n        dispatch(calling_api())\n        getListFriendAPI()\n        .then( listFriend => {\n            dispatch(get_list_friend_successful(listFriend))\n            if(listFriend.length >= 1){\n                var friendID = listFriend[0]._id\n                dispatch(getListMessage(friendID))\n                dispatch(select_user_to_chat(friendID))\n                dispatch(set_title_name(listFriend[0].username))\n            }\n        })\n        .catch((err) => {\n            dispatch(fail(err))\n        });\n    }\n}\n\nexport function getNewFriend(){\n    return (dispatch) => {\n        dispatch(calling_api())\n        getListFriendAPI()\n        .then( listFriend => {\n            dispatch(get_list_friend_successful(listFriend))\n        })\n        .catch((err) => {\n            dispatch(fail(err))\n        });\n    }\n}\n\nexport function getListMessage(receiverID){\n    return (dispatch) => {\n        dispatch(calling_api())\n        getListMessageAPI(receiverID)\n        .then( listMessage => {\n            dispatch(get_list_message_successful(listMessage))\n        })\n        .catch((err) => {\n            dispatch(fail(err))\n        });\n    }\n}\n\n\nexport function get_list_friend_successful(listFriend){\n    return {\n        type: 'SET_LIST_FRIEND',\n        listFriend: listFriend\n    }\n}\n\nexport function get_list_message_successful(listMessage){\n    return {\n        type: 'SET_LIST_MESSAGE',\n        listMessage: listMessage\n    }\n}\n\nexport function push_message(arr){\n    return{\n        type: 'PUSH_MESSAGE',\n        arr: arr\n    }\n}\n\nexport function set_title_name(titleName){\n    return{\n        type:'SET_TITLE_NAME',\n        titleName: titleName\n    }\n}\n\nexport function select_user_to_chat(receiverID){\n    return {\n        type: 'SET_RECEIVER_ID',\n        receiverID: receiverID\n    }\n}\n\nexport function calling_api(){\n    return {\n        type: 'CALLING_API',\n    }\n}\n\nexport function fail(err){\n    return {\n        type: 'FAIL',\n        err: err\n    }\n}\n\nexport function fail_handle(){\n    return {\n        type: 'CHAT_FAIL_HANDLE'\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport blue from '@material-ui/core/colors/blue';\nimport {select_user_to_chat, getListFriend, getListMessage, set_title_name} from '../../screens/chat/actions/chat';\nimport {connect} from 'react-redux';\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n};\n\nclass ListUser extends React.Component {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = (receiveID, username) => {\n    this.props.onClose();\n    this.props.set_title_name(username)\n    this.props.getListMessage(receiveID);\n    this.props.select_user_to_chat(receiveID);\n  };\n\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n    return (\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n        <DialogTitle id=\"simple-dialog-title\">List users</DialogTitle>\n        <div>\n          <List>\n            {this.props.findUserReducer.data.map(user => (\n              <ListItem button onClick={()=>this.handleListItemClick(user._id, user.username)} key={user._id}>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={user.username} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nListUser.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string,\n  };\n\nconst mapStateToProps = (state) => ({\n    findUserReducer: state.findUserReducer,\n    chatReducer: state.chatReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getListFriend: ()=>dispatch(getListFriend()),\n  getListMessage: (receiverID)=>dispatch(getListMessage(receiverID)),\n  select_user_to_chat: (receiveID)=>dispatch(select_user_to_chat(receiveID)),\n  set_title_name: (titleName)=>dispatch(set_title_name(titleName))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(ListUser));","import React from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { set_title_name, select_user_to_chat, getListFriend, getListMessage} from '../screens/chat/actions/chat';\nimport {connect} from 'react-redux';\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  onlineBar:{\n    textAlign: 'right',\n  }\n};\n\nclass ShowListFriend extends React.Component {\n\n  handleListItemClick = (receiveID, username) => {\n    this.props.getListMessage(receiveID);\n    this.props.select_user_to_chat(receiveID);\n    this.props.set_title_name(username);\n  };\n\n    render() {\n      const { classes } = this.props;\n      return(\n        <div>\n            <List>\n                {this.props.chatReducer.listFriend.map(user => {\n                  if(user.socketID){\n                    return (\n                      <ListItem button onClick={()=>this.handleListItemClick(user._id, user.username)} key={user._id}>\n                        <ListItemAvatar>\n                          <Avatar className={classes.avatar}>\n                            <PersonIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={user.username} />\n                        <ListItemText primary=\"online\" className={classes.onlineBar}/>\n                      </ListItem>\n                      )\n                  }\n                    return (\n                      <ListItem button onClick={()=>this.handleListItemClick(user._id, user.username)} key={user._id}>\n                        <ListItemAvatar>\n                          <Avatar className={classes.avatar}>\n                            <PersonIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={user.username} />\n                      </ListItem>\n                    )\n                })}\n            </List>\n        </div>\n      )\n    }\n}\n\nShowListFriend.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nconst mapStateToProps = (state) => ({\n  chatReducer: state.chatReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getListFriend: ()=>dispatch(getListFriend()),\n  getListMessage: (receiverID)=>dispatch(getListMessage(receiverID)),\n  select_user_to_chat: (receiveID)=>dispatch(select_user_to_chat(receiveID)),\n  set_title_name: (titleName)=>dispatch(set_title_name(titleName))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(ShowListFriend));","import React from 'react';\nimport io from 'socket.io-client'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport SendIcon from '@material-ui/icons/Send';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport {findUser_fail_handle, findUser} from '../chat/actions/findUser';\nimport PieceMessage from '../../components/pieceMessage';\nimport ListUser from './ListUser'\nimport ShowListFriend from '../../components/showListFriend'\nimport { connect} from 'react-redux'\nimport config from '../../config'\nimport { getNewFriend, getListFriend, getListMessage, push_message} from '../chat/actions/chat'\nimport { log_out } from '../../actions/index';\n\n\nconst styles = theme => ({\n  messageBar: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n  },\n  divider: {\n    width: 1,\n    height: 40,\n    margin: 4,\n  },\n  divTop: {\n    padding: theme.spacing.unit,\n    display: 'flex',\n    flexDirection: 'row',\n    borderBottom: '1px solid #e0e0e0'\n  },\n  divBottom: {\n    height: \"calc(100vh - \" + theme.spacing.unit * 15 + \"px)\",\n    padding: theme.spacing.unit * 2,\n\n  },\n  searchDiv: {\n    background: '#e0e0e0',\n    borderRadius: 6,\n    color: '#212121',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  iconButton: {\n    background: '#bdbdbd',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  inputSearchRoot: {\n    width: '100%',\n  },\n  inputSearch: {\n    paddingLeft: theme.spacing.unit,\n  },\n  cardMessage:{\n    borderRadius: '6px',\n    height: \"calc(100vh - \" + theme.spacing.unit * 13 + \"px)\",\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  },\n  cardListFriend:{\n    marginTop: theme.spacing.unit * 2,\n    borderRadius: '6px',\n    height: \"calc(100vh - \" + theme.spacing.unit * 21 + \"px)\",\n    overflow: 'auto',\n  },\n  findUser:{\n    overflow: 'auto',\n    height: \"calc(100vh - \" + theme.spacing.unit * 21 + \"px)\",\n  },\n});\n\nclass Chat extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      searchText: \"\",\n      content: \"\",\n    }\n    this.socket = null;\n    this.handleKeyPressSearch = this.handleKeyPressSearch.bind(this)\n    this.handleKeyPressMessage= this.handleKeyPressMessage.bind(this)\n  }\n\n  handleClickSearch = () => {\n    this.setState({open: true})\n    this.props.findUser(this.state.searchText);\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  onClickLogOut = (e) => {\n    this.props.log_out();\n    localStorage.clear();\n    this.props.history.push('/')\n    // window.location.reload()\n\n  }\n\n  handleKeyPressSearch(e) {\n    if (e.key === 'Enter') {\n      this.handleClickSearch();\n    }\n  }\n\n  handleKeyPressMessage(e) {\n    if (e.key === 'Enter') {\n      this.handleClickSend(e);\n    }\n  }\n\n  onFocusMessage = () => {\n    var arr = this.props.chatReducer.listMessage;\n    var lastMessage = arr[arr.length - 1];\n    if(lastMessage){\n      var data = {\n        senderID: lastMessage.senderID,\n        receiverID: lastMessage.receiverID\n      }\n  \n      if(localStorage.getItem('userID') !== lastMessage.senderID){\n        this.socket.emit('is seen', data)\n      }\n    }\n  }\n\n  handleClickSend = (e) => {\n    if(this.state.content){\n      let data = {\n        senderID: localStorage.getItem('userID'),\n        receiverID: this.props.chatReducer.receiverID,\n        content: this.state.content,\n      }\n      let input = {\n        senderID: localStorage.getItem('userID'),\n        content: this.state.content,\n        date: Date(Date.now()),\n      }\n\n      var user = this.props.chatReducer.listFriend.find(u=>u._id === this.props.chatReducer.receiverID)\n\n        if(user){\n          this.socket.emit('chat message', data)\n        }\n        else{\n          this.socket.emit('first message', data)\n          this.socket.on('return friend', () => {\n            this.props.getNewFriend()\n          })\n        }\n\n      // this.setState(({ currentMessage }) => ({ currentMessage: [...currentMessage, input] }));\n      this.props.push_message(input)\n      this.setState({content: ''})\n      var x = document.getElementById(\"inputMessage\")\n      x.scrollTop = x.scrollHeight;\n    }\n  }\n  componentWillMount = () => {\n    if(localStorage.getItem('accessToken') === null){\n      this.props.history.push('/')\n    }\n\n    this.props.getListFriend();\n\n    let token = localStorage.getItem('accessToken')\n    this.socket = io(config.url, {'query':{'token':token}});\n\n    this.socket.on('error', data => {\n      alert('socket error' + data);\n    })\n\n    this.socket.on('chat message', data => {\n      let input = {\n        senderID: data.senderID,\n        receiverID: data.receiverID,\n        content: data.content,\n        date: Date(Date.now()),\n      }\n      if(data.senderID === this.props.chatReducer.receiverID)\n        this.props.push_message(input)\n    })\n\n    this.socket.on('first message', data => {\n      let input = {\n        senderID: data.senderID,\n        receiverID: data.receiverID,\n        content: data.content,\n        date: Date(Date.now()),\n      }\n      this.props.getListFriend()\n      if(data.senderID === this.props.chatReducer.receiverID)\n        this.props.push_message(input)\n    }) \n\n    this.socket.on('is seen', () => {\n      this.props.getListMessage(this.props.chatReducer.receiverID)\n    })\n  }\n\n  componentDidMount(){\n    var lastScrollHeight = 0\n    var x = document.getElementById(\"inputMessage\")\n    setInterval(function() {\n      if (x.scrollHeight !==lastScrollHeight) {\n        lastScrollHeight = x.scrollHeight\n        x.scrollTop = x.scrollHeight;\n      }\n    }, 100)\n    \n  }\n\n  render(){\n    const { classes } = this.props;\n    if(this.props.findUserReducer.error){\n        alert(\"Find user fail: \" + this.props.findUserReducer.error)\n        this.props.signin_fail_handle();\n    }\n\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={3}>\n          <div className={classes.divTop} style={{borderRight: '1px solid #e0e0e0', justifyContent: 'center',}}>\n            <Button >\n              Chat realtime\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <div className={classes.divTop} style={{justifyContent: 'space-between',}}>\n          <IconButton style={{padding: 5}}>\n            <AccountCircle/>\n          </IconButton>\n            <Typography variant=\"h6\">\n              {this.props.chatReducer.titleName}\n            </Typography>\n            <Button onClick={this.onClickLogOut}>\n              Log out\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <div className={classes.divBottom} style={{borderRight: '1px solid #e0e0e0'}}>\n            <div className={classes.searchDiv}>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputSearchRoot,\n                  input: classes.inputSearch,\n                }}\n                value={this.state.searchText}\n                onChange={e=>this.setState({searchText: e.target.value})}\n                onKeyPress={this.handleKeyPressSearch}\n              />\n              <Divider className={classes.divider} />\n              <IconButton \n                type=\"submit\"\n                variant=\"outlined\"\n                className={classes.iconButton}\n                onClick={this.handleClickSearch}\n                disabled={this.props.findUserReducer.isFindUser}\n              >\n                <SearchIcon />\n              </IconButton>\n              <ListUser className={classes.findUser}\n                open={this.state.open}\n                onClose={this.handleClose}\n              />\n            </div>\n            <div>\n              <Card className={classes.cardListFriend}>\n                <ShowListFriend />\n              </Card>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <div className={classes.divBottom}>\n            <Card className={classes.cardMessage}>\n              <div id=\"inputMessage\" style={{overflow: 'auto',}}>\n                <ul>\n                  {\n                    this.props.chatReducer.listMessage.map( msg => {\n                      if(msg.senderID === localStorage.getItem('userID')){\n                        var arr = this.props.chatReducer.listMessage;\n                        var lastMessage = arr[arr.length - 1];\n                        if(msg === lastMessage && lastMessage.isSeen === true)\n                          return <PieceMessage content={msg.content} key={msg._id} sender={true}  seen={true} />\n                        return <PieceMessage content={msg.content} key={msg._id} sender={true} /> // input date and time here\n                      }\n            \n                      return <PieceMessage content={msg.content} key={msg._id} sender={false} /> \n                    })\n                  }\n                </ul>\n              </div>\n              <div>\n              <Paper className={classes.messageBar} elevation={4}>\n                <InputBase\n                  className={classes.input}\n                  onFocus={this.onFocusMessage}\n                  placeholder=\"Message...\"\n                  value={this.state.content}\n                  onChange={ e => this.setState({content: e.target.value})}\n                  onKeyPress={this.handleKeyPressMessage}\n                  />\n                <Divider className={classes.divider} />\n                <Button color=\"secondary\" onClick={e => {this.handleClickSend(e)}}>\n                  Send\n                  <SendIcon />\n                </Button>\n              </Paper>\n              </div>\n            </Card>\n          </div>\n        </Grid>\n      </Grid>\n  );\n  }\n  \n}\n\nChat.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  findUserReducer: state.findUserReducer,\n  chatReducer: state.chatReducer,\n  signinReducer: state.signinReducer\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  findUser: (username)=>dispatch(findUser(username)),\n  findUser_fail_handle: ()=>dispatch(findUser_fail_handle()),\n  getListFriend: ()=>dispatch(getListFriend()),\n  getListMessage: (receiverID)=>dispatch(getListMessage(receiverID)),\n  push_message: (arr)=>dispatch(push_message(arr)),\n  getNewFriend: ()=>dispatch(getNewFriend()),\n  log_out: ()=>dispatch(log_out())\n\n})\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(Chat));","export function log_out(){\n    return {\n        type: 'LOG_OUT'\n    }\n}\n\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './screens/login/Login'\nimport Chat from './screens/chat/Chat'\n\nconst Root = () => (\n    <Router>\n        <div>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/app\" component={Chat} />\n        </div>\n    </Router>\n)\n\nexport default Root;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Route from './router';\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store = {store}>\n        <Route />\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}